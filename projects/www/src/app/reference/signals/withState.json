{
  "name": "withState",
  "canonicalReference": "@ngrx/signals!withState:function",
  "kind": "Function",
  "fileUrlPath": "../../dist/modules/signals/src/with-state.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Function",
      "canonicalReference": "@ngrx/signals!withState:function(1)",
      "docComment": "/**\n * Adds state to a signal store using a factory function.\n *\n * @param stateFactory - A factory function that returns the initial state.\n *\n * @returns A signal store feature that adds the state.\n *\n * @public\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export declare function withState<State extends "
        },
        { "kind": "Content", "text": "object" },
        { "kind": "Content", "text": ">(stateFactory: " },
        { "kind": "Content", "text": "() => State" },
        { "kind": "Content", "text": "): " },
        {
          "kind": "Reference",
          "text": "SignalStoreFeature",
          "canonicalReference": "@ngrx/signals!SignalStoreFeature:type"
        },
        { "kind": "Content", "text": "<" },
        {
          "kind": "Reference",
          "text": "EmptyFeatureResult",
          "canonicalReference": "@ngrx/signals!EmptyFeatureResult:type"
        },
        {
          "kind": "Content",
          "text": ", {\n    state: State;\n    props: {};\n    methods: {};\n}>"
        },
        { "kind": "Content", "text": ";" }
      ],
      "fileUrlPath": "../../dist/modules/signals/src/with-state.d.ts",
      "returnTypeTokenRange": { "startIndex": 5, "endIndex": 9 },
      "releaseTag": "Public",
      "overloadIndex": 1,
      "parameters": [
        {
          "parameterName": "stateFactory",
          "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "isOptional": false
        }
      ],
      "typeParameters": [
        {
          "typeParameterName": "State",
          "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        }
      ],
      "name": "withState",
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": true,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Adds state to a signal store using a factory function.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": " A signal store feature that adds the state.\n\n\n",
        "see": [],
        "params": [
          {
            "name": "stateFactory",
            "description": "A factory function that returns the initial state.\n\n"
          }
        ]
      }
    },
    {
      "kind": "Function",
      "canonicalReference": "@ngrx/signals!withState:function(2)",
      "docComment": "/**\n * Adds state to a signal store using a static state object.\n *\n * @param state - The initial state object.\n *\n * @returns A signal store feature that adds the state.\n *\n * @public\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export declare function withState<State extends "
        },
        { "kind": "Content", "text": "object" },
        { "kind": "Content", "text": ">(state: " },
        { "kind": "Content", "text": "State" },
        { "kind": "Content", "text": "): " },
        {
          "kind": "Reference",
          "text": "SignalStoreFeature",
          "canonicalReference": "@ngrx/signals!SignalStoreFeature:type"
        },
        { "kind": "Content", "text": "<" },
        {
          "kind": "Reference",
          "text": "EmptyFeatureResult",
          "canonicalReference": "@ngrx/signals!EmptyFeatureResult:type"
        },
        {
          "kind": "Content",
          "text": ", {\n    state: State;\n    props: {};\n    methods: {};\n}>"
        },
        { "kind": "Content", "text": ";" }
      ],
      "fileUrlPath": "../../dist/modules/signals/src/with-state.d.ts",
      "returnTypeTokenRange": { "startIndex": 5, "endIndex": 9 },
      "releaseTag": "Public",
      "overloadIndex": 2,
      "parameters": [
        {
          "parameterName": "state",
          "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "isOptional": false
        }
      ],
      "typeParameters": [
        {
          "typeParameterName": "State",
          "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        }
      ],
      "name": "withState",
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": true,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Adds state to a signal store using a static state object.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": " A signal store feature that adds the state.\n\n\n",
        "see": [],
        "params": [
          { "name": "state", "description": "The initial state object.\n\n" }
        ]
      }
    }
  ]
}
